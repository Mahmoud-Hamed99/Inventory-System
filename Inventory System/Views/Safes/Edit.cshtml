@model Inventory_System.Models.Safe

@{
    ViewBag.Title = "Edit";
}

<h2>تعديل بيانات لعملية تمت عالخزنة</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SafeId)

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.PermessionNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PermessionNumber, "", new { @class = "text-danger" })
        </div>
        @Html.Label("رقم الأذن", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">

            <div class="input-group date" id="requestDateTimePicker" data-target-input="nearest">
                <div class="input-group-append" data-target="#requestDateTimePicker" data-toggle="datetimepicker">
                    <div class="input-group-text"><i class="far fa-clock"></i></div>
                    @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control datetimepicker-input", data_target = "#requestDateTimePicker" } })
                </div>
            </div>

            @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
        </div>
        @Html.Label("تاريخ الاصدار", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.TransactionType, new List<SelectListItem>
        {
        new SelectListItem{ Text="اختر العملية", Value = "اختر العملية" },
        new SelectListItem{ Text="ايداع", Value = "ايداع" },
        new SelectListItem{ Text="سحب", Value = "سحب" },

        }, new { @id = "TransitionTypeId", @class = "form-control", onchange = "MyFunction()" })

            @Html.ValidationMessageFor(model => model.TransactionType, "", new { @class = "text-danger" })
        </div>
        @Html.Label("نوع الحركه", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>


    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Deposit, new { htmlAttributes = new { @id = "depositId", @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Deposit, "", new { @class = "text-danger" })
        </div>
        @Html.Label("المبلغ المستلم", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Withdraw, new { htmlAttributes = new { @class = "form-control", @id = "withdrawId", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Withdraw, "", new { @class = "text-danger" })
        </div>
        @Html.Label("المبلغ المصروف", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
        @Html.Label("ملاحظات", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="حفظ" class="btn btn-default" />
        </div>
    </div>
</div>


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
    <link href="~/Content/css/cs.css" rel="stylesheet" />
    <script src="~/Scripts/dt.js"></script>

    <script>
        $(function () {
            $('#requestDateTimePicker').datetimepicker({
                // time: "far fa-clock",
                format: 'DD-MM-YYYY hh:mm a',
                defaultDate: new Date()

            });
        });
    </script>


    <script>
        function MyFunction() {
            if ($('#TransitionTypeId').val() == "ايداع") {
                $('#depositId').attr("disabled", false);
                $('#withdrawId').attr("disabled", "disabled");
                $('#withdrawId').val("0");

            }
            else if ($('#TransitionTypeId').val() == "سحب") {
                $('#withdrawId').attr("disabled", false);
                $('#depositId').attr("disabled", "disabled");
                $('#depositId').val("0");
            }
            else {
                $('#withdrawId').attr("disabled", "disabled");
                $('#withdrawId').val("0");
                $('#depositId').attr("disabled", "disabled");
                $('#depositId').val("0");
            }
        }
    </script>

}